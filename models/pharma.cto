/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample business network definition.
 */
namespace org.howest.pharma
enum ShipmentStatus {
  o CREATED
  o IN_TRANSIT
  o ARRIVED_WHOLESELLER
  o ARRIVED_PHARMACIST
  o ARRIVED_PATIENT
  o QUARANTINE
}
enum ProductStatus {
  o QUARANTINE
}
concept Trace{
  o DateTime timestamp
  --> Product product
--> Business seller
--> Business buyer
}
concept TraceProduct{
  o DateTime timestamp
  --> Product product
--> Manufacturer manufacturer

}
abstract transaction ShipmentTransaction {
  --> Shipment shipment
}

transaction ShipmentReceivedWholeseller extends ShipmentTransaction {
}
transaction ShipmentReceivedPatient extends ShipmentTransaction {
}
transaction ShipmentReceivedPharmacist extends ShipmentTransaction {
}
asset Shipment identified by shipmentId {
  o String shipmentId
  --> Product product
  o ShipmentStatus status
  o Long unitCount
  --> Contract contract
  o Trace[] trace optional
}

asset Contract identified by contractId {
  o String contractId
  o Double unitPrice
  --> Manufacturer manufacturer
  --> WholeSeller wholeseller
  --> Pharmacist pharmacist
  --> Patient patient
  o DateTime arrivalDateTime
}

asset Product identified by serialNumber{
  o String serialNumber
  o String productCode
  o String batchNumber
   o String hash
   o TraceProduct[] trace
   o ProductStatus status optional
  --> Manufacturer manufacturer
}
concept Address {
  o String city optional
  o String country
  o String street optional
  o String zip optional
}


abstract participant Business identified by email {
  o String email
  o Address address
  o Double accountBalance
}

participant Manufacturer extends Business {
}

participant WholeSeller extends Business {
}

participant Pharmacist extends Business {
}

participant Patient extends Business {
}

/*concept Node{
  o String nodeNumber
o Leaf[] leafs
}
concept Leaf{
  o String leafNumber
}
concept Root{
  o String rootNumber
  o Node[] nodes
}
*/


transaction CreateProduct {
 o String serialNumber
o String productCode
 o String batchNumber
--> Manufacturer manufacturer
}

event CreateProductEvent{
--> Product product
}

transaction Verify{

 --> Product product
}
